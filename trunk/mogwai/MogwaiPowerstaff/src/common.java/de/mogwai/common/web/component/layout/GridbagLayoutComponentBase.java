package de.mogwai.common.web.component.layout;

import java.util.Vector;

import javax.faces.context.FacesContext;
import javax.faces.el.ValueBinding;

/**
 * Automatically Generated By JSFCodeGen. DO NOT ALTER ! Generated at Sun Dec 16
 * 11:38:15 CET 2007
 */
public abstract class GridbagLayoutComponentBase extends javax.faces.component.UIComponentBase {

    public static final String FAMILY_NAME = "GridbagLayoutFamily";

    public static final String COMPONENT_TYPE = "GridbagLayoutComponent";

    public static final String RENDERER_TYPE = "GridbagLayoutRenderer";

    protected Integer _border;

    @Override
    public String getFamily() {
        return FAMILY_NAME;
    }

    public void setBorder(Integer aValue) {
        _border = aValue;
    }

    public void setBorder(int aValue) {
        _border = aValue;
    }

    public int getBorder() {
        if (_border != null) {
            return _border.intValue();
        }
        ValueBinding theBinding = getValueBinding("border");
        if (theBinding == null) {
            return 0;
        }
        Number theValue = (Number) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return 0;
        }
        return theValue.intValue();
    }

    @Override
    public Object saveState(FacesContext aContext) {
        Vector<Object> theResult = new Vector<Object>();
        theResult.add(super.saveState(aContext));
        theResult.add(_border);
        return theResult.toArray();
    }

    @Override
    public void restoreState(FacesContext aContext, Object aState) {
        Object[] theResult = (Object[]) aState;
        super.restoreState(aContext, theResult[0]);
        _border = (Integer) theResult[1];
    }
}
