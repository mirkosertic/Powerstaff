package de.mogwai.common.web.component.action;

import java.util.Vector;

import javax.faces.context.FacesContext;
import javax.faces.el.ValueBinding;

/**
 * Automatically Generated By JSFCodeGen. DO NOT ALTER ! Generated at Sun Dec 16
 * 11:38:15 CET 2007
 */
public abstract class CommandButtonComponentBase extends de.mogwai.common.web.component.action.AbstractCommandComponent {

    public static final String FAMILY_NAME = "MogwaiActionFamily";

    public static final String COMPONENT_TYPE = "CommandButtonComponent";

    public static final String RENDERER_TYPE = "CommandButtonRenderer";

    protected String _key;

    protected String _type;

    protected Boolean _keySensitive;

    protected Integer _actionKey;

    protected Integer _width;

    protected Boolean _sizeToGridBag;

    @Override
    public String getFamily() {
        return FAMILY_NAME;
    }

    public void setKey(String aValue) {
        _key = aValue;
    }

    public String getKey() {
        if (_key != null) {
            return _key;
        }
        ValueBinding theBinding = getValueBinding("key");
        if (theBinding == null) {
            return null;
        }
        String theValue = (String) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return null;
        }
        return theValue;
    }

    public void setType(String aValue) {
        _type = aValue;
    }

    public String getType() {
        if (_type != null) {
            return _type;
        }
        ValueBinding theBinding = getValueBinding("type");
        if (theBinding == null) {
            return "button";
        }
        String theValue = (String) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return "button";
        }
        return theValue;
    }

    public void setKeySensitive(Boolean aValue) {
        _keySensitive = aValue;
    }

    public void setKeySensitive(boolean aValue) {
        _keySensitive = aValue;
    }

    public boolean isKeySensitive() {
        if (_keySensitive != null) {
            return _keySensitive.booleanValue();
        }
        ValueBinding theBinding = getValueBinding("keySensitive");
        if (theBinding == null) {
            return false;
        }
        Boolean theValue = (Boolean) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return false;
        }
        return theValue;
    }

    public void setActionKey(Integer aValue) {
        _actionKey = aValue;
    }

    public void setActionKey(int aValue) {
        _actionKey = aValue;
    }

    public int getActionKey() {
        if (_actionKey != null) {
            return _actionKey.intValue();
        }
        ValueBinding theBinding = getValueBinding("actionKey");
        if (theBinding == null) {
            return 13;
        }
        Number theValue = (Number) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return 13;
        }
        return theValue.intValue();
    }

    public void setWidth(Integer aValue) {
        _width = aValue;
    }

    public void setWidth(int aValue) {
        _width = aValue;
    }

    public int getWidth() {
        if (_width != null) {
            return _width.intValue();
        }
        ValueBinding theBinding = getValueBinding("width");
        if (theBinding == null) {
            return -1;
        }
        Number theValue = (Number) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return -1;
        }
        return theValue.intValue();
    }

    public void setSizeToGridBag(Boolean aValue) {
        _sizeToGridBag = aValue;
    }

    public void setSizeToGridBag(boolean aValue) {
        _sizeToGridBag = aValue;
    }

    public boolean isSizeToGridBag() {
        if (_sizeToGridBag != null) {
            return _sizeToGridBag.booleanValue();
        }
        ValueBinding theBinding = getValueBinding("sizeToGridBag");
        if (theBinding == null) {
            return false;
        }
        Boolean theValue = (Boolean) theBinding.getValue(getFacesContext());
        if (theValue == null) {
            return false;
        }
        return theValue;
    }

    @Override
    public Object saveState(FacesContext aContext) {
        Vector<Object> theResult = new Vector<Object>();
        theResult.add(super.saveState(aContext));
        theResult.add(_key);
        theResult.add(_type);
        theResult.add(_keySensitive);
        theResult.add(_actionKey);
        theResult.add(_width);
        theResult.add(_sizeToGridBag);
        return theResult.toArray();
    }

    @Override
    public void restoreState(FacesContext aContext, Object aState) {
        Object[] theResult = (Object[]) aState;
        super.restoreState(aContext, theResult[0]);
        _key = (String) theResult[1];
        _type = (String) theResult[2];
        _keySensitive = (Boolean) theResult[3];
        _actionKey = (Integer) theResult[4];
        _width = (Integer) theResult[5];
        _sizeToGridBag = (Boolean) theResult[6];
    }
}
